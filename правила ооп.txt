критерри:
эффективность -  делает ровно то, что от него требуется
Тестируемость
сопровождаемость
Гибкость 
Расширяемость – что нужно настроить в проекте, чтобы допустить возможность добавления новых решений.
Принципы:
DRY (don’t repeat yourself – не повторяйся)

SoC (Separation of Concerns) – разделение ответственностей.
        MVC (model-view-controller), в котором распределяются роли между
        тремя сущностями.
        • Сервис-ориентированная архитектура (service-oriented architecture,
         SOA), когда всё разделяется по своим сервисам.
         • Микросервисы, когда для каждой мало-мальской задачи заводится своя
          собственная маленькая программа.
          • CI/CD, которые мы изучали в рамках первой лабораторной работы.
          Когда проекты становятся большими, заводятся фермы, где одни actions
          занимаются одним, другие – другим. 

YAGNI (You aren’t gonna need it). Очень часто бывает так, что
программисты начинают делать вещи, которые в проекте не нужны. Это имеет
место быть, когда программист любит программировать и творчески подходит
к этому делу.

KISS (keep it simple, stupid). Чем проще, тем лучше.

TDA (Tell-Don’t-Askst) – говори, что делать, а не спрашивай. 

LoD (Law of Demeter) – модули связаны только с непосредственными «соседями».


SOLID – это акроним Майкла Фэзерса для принципов Роберта
Мартина…
• S – Single Responsibility – единственность ответственности.
• O – Open Closed – открыт для расширения, закрыт для модификации. мы
        можем спокойно расширять наш проект, не производя никаких изменений в
        уже созданном классе.
• L – Liskov Substitution – принципы подстановки Лисков.
• I – Interface Segregation – разделение интерфейса.
• D – Dependency Inversion – инверсия зависимостей. 